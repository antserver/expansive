#
#   exp-windows-default.nmake -- Makefile to build Embedthis Expansive for windows
#

NAME                  = exp
VERSION               = 0.4.1

OS                    = windows
PA                    = $(PROCESSOR_ARCHITECTURE)
!IF "$(PROFILE)" == ""
PROFILE               = default
!ENDIF


!IF "$(PA)" == "AMD64"
ARCH                  = x64
ENTRY                 = _DllMainCRTStartup
!ELSE
ARCH                  = x86
ENTRY                 = _DllMainCRTStartup@12
!ENDIF

!IF "$(CONFIG)" == ""
CONFIG                = $(OS)-$(ARCH)-$(PROFILE)
!ENDIF

!IF "$(BUILD)" == ""
BUILD                 = build\$(CONFIG)
!ENDIF

LBIN                  = $(BUILD)\bin

!IF "$(ME_COM_EJS)" == ""
ME_COM_EJS            = 1
!ENDIF
!IF "$(ME_COM_EST)" == ""
ME_COM_EST            = 1
!ENDIF
!IF "$(ME_COM_HTTP)" == ""
ME_COM_HTTP           = 1
!ENDIF
!IF "$(ME_COM_OPENSSL)" == ""
ME_COM_OPENSSL        = 0
!ENDIF
!IF "$(ME_COM_OSDEP)" == ""
ME_COM_OSDEP          = 1
!ENDIF
!IF "$(ME_COM_PCRE)" == ""
ME_COM_PCRE           = 1
!ENDIF
!IF "$(ME_COM_SQLITE)" == ""
ME_COM_SQLITE         = 0
!ENDIF
!IF "$(ME_COM_SSL)" == ""
ME_COM_SSL            = 1
!ENDIF
!IF "$(ME_COM_VXWORKS)" == ""
ME_COM_VXWORKS        = 0
!ENDIF
!IF "$(ME_COM_ZLIB)" == ""
ME_COM_ZLIB           = 1
!ENDIF

!IF "$(ME_COM_SSL)" == ""
ME_COM_SSL            = 1
!ENDIF

!IF "$(ME_COM_SSL)" == ""
ME_COM_SSL            = 1
!ENDIF

!IF "$(ME_COM_ZLIB)" == ""
ME_COM_ZLIB           = 1
!ENDIF


CC                    = cl
LD                    = link
RC                    = rc
CFLAGS                = -nologo -GR- -W3 -Zi -Od -MDd
DFLAGS                = -D_REENTRANT -D_MT -DME_COM_EJS=$(ME_COM_EJS) -DME_COM_EST=$(ME_COM_EST) -DME_COM_HTTP=$(ME_COM_HTTP) -DME_COM_OPENSSL=$(ME_COM_OPENSSL) -DME_COM_OSDEP=$(ME_COM_OSDEP) -DME_COM_PCRE=$(ME_COM_PCRE) -DME_COM_SQLITE=$(ME_COM_SQLITE) -DME_COM_SSL=$(ME_COM_SSL) -DME_COM_VXWORKS=$(ME_COM_VXWORKS) -DME_COM_ZLIB=$(ME_COM_ZLIB) 
IFLAGS                = -Ibuild\$(CONFIG)\inc
LDFLAGS               = -nologo -nodefaultlib -incremental:no -debug -machine:$(ARCH)
LIBPATHS              = "-libpath:$(BUILD)\bin"
LIBS                  = ws2_32.lib advapi32.lib user32.lib kernel32.lib oldnames.lib msvcrt.lib shell32.lib

ME_ROOT_PREFIX        = C:
ME_BASE_PREFIX        = $(ME_ROOT_PREFIX)\Program Files
ME_APP_PREFIX         = $(ME_BASE_PREFIX)\Embedthis Expansive
ME_VAPP_PREFIX        = $(ME_APP_PREFIX)
ME_DATA_PREFIX        = $(ME_VAPP_PREFIX)
ME_STATE_PREFIX       = $(ME_VAPP_PREFIX)
ME_BIN_PREFIX         = $(ME_VAPP_PREFIX)\bin
ME_INC_PREFIX         = $(ME_VAPP_PREFIX)\inc
ME_LIB_PREFIX         = $(ME_VAPP_PREFIX)\lib
ME_MAN_PREFIX         = $(ME_VAPP_PREFIX)\man
ME_ETC_PREFIX         = $(ME_VAPP_PREFIX)
ME_WEB_PREFIX         = $(ME_VAPP_PREFIX)\web
ME_LOG_PREFIX         = $(ME_VAPP_PREFIX)\log
ME_SPOOL_PREFIX       = $(ME_VAPP_PREFIX)\tmp
ME_CACHE_PREFIX       = $(ME_VAPP_PREFIX)\cache
ME_SRC_PREFIX         = $(ME_VAPP_PREFIX)\src


!IF "$(ME_COM_EJS)" == "1"
TARGETS               = $(TARGETS) build\$(CONFIG)\bin\ejs.mod
!ENDIF
!IF "$(ME_COM_EJS)" == "1"
TARGETS               = $(TARGETS) build\$(CONFIG)\bin\ejs.exe
!ENDIF
TARGETS               = $(TARGETS) build\$(CONFIG)\bin\exp.exe
TARGETS               = $(TARGETS) build\$(CONFIG)\bin\ca.crt
!IF "$(ME_COM_HTTP)" == "1"
TARGETS               = $(TARGETS) build\$(CONFIG)\bin\http.exe
!ENDIF
!IF "$(ME_COM_EST)" == "1"
TARGETS               = $(TARGETS) build\$(CONFIG)\bin\libest.dll
!ENDIF
TARGETS               = $(TARGETS) build\$(CONFIG)\bin\libmprssl.dll
TARGETS               = $(TARGETS) build\$(CONFIG)\bin\removeFiles.exe
TARGETS               = $(TARGETS) build\$(CONFIG)\bin\expansive.sample

!IFNDEF SHOW
.SILENT:
!ENDIF

all build compile: prep $(TARGETS)

.PHONY: prep

prep:
!IF "$(VSINSTALLDIR)" == ""
	echo "Visual Studio vars not set. Run vcvars.bat."
	exit 255
!ENDIF
!IF "$(ME_APP_PREFIX)" == ""
	echo "ME_APP_PREFIX not set."
	exit 255
!ENDIF
	@if not exist $(BUILD)\bin md $(BUILD)\bin
	@if not exist $(BUILD)\inc md $(BUILD)\inc
	@if not exist $(BUILD)\obj md $(BUILD)\obj
	@if not exist $(BUILD)\inc\me.h copy projects\exp-windows-default-me.h $(BUILD)\inc\me.h

!IF "$(SHOW)" != ""
	@echo '      [Info] Use "make SHOW=1" to trace executed commands and errors.'
LOG =
!ELSE
LOG = >nul
!ENDIF

clean:
	if exist "build\$(CONFIG)\obj\ejs.obj" del /Q "build\$(CONFIG)\obj\ejs.obj"
	if exist "build\$(CONFIG)\obj\ejsLib.obj" del /Q "build\$(CONFIG)\obj\ejsLib.obj"
	if exist "build\$(CONFIG)\obj\ejsc.obj" del /Q "build\$(CONFIG)\obj\ejsc.obj"
	if exist "build\$(CONFIG)\obj\estLib.obj" del /Q "build\$(CONFIG)\obj\estLib.obj"
	if exist "build\$(CONFIG)\obj\exp.obj" del /Q "build\$(CONFIG)\obj\exp.obj"
	if exist "build\$(CONFIG)\obj\expTemplate.obj" del /Q "build\$(CONFIG)\obj\expTemplate.obj"
	if exist "build\$(CONFIG)\obj\http.obj" del /Q "build\$(CONFIG)\obj\http.obj"
	if exist "build\$(CONFIG)\obj\httpLib.obj" del /Q "build\$(CONFIG)\obj\httpLib.obj"
	if exist "build\$(CONFIG)\obj\mprLib.obj" del /Q "build\$(CONFIG)\obj\mprLib.obj"
	if exist "build\$(CONFIG)\obj\mprSsl.obj" del /Q "build\$(CONFIG)\obj\mprSsl.obj"
	if exist "build\$(CONFIG)\obj\pcre.obj" del /Q "build\$(CONFIG)\obj\pcre.obj"
	if exist "build\$(CONFIG)\obj\removeFiles.obj" del /Q "build\$(CONFIG)\obj\removeFiles.obj"
	if exist "build\$(CONFIG)\obj\zlib.obj" del /Q "build\$(CONFIG)\obj\zlib.obj"
	if exist "build\$(CONFIG)\bin\ejsc.exe" del /Q "build\$(CONFIG)\bin\ejsc.exe"
	if exist "build\$(CONFIG)\bin\ejsc.lib" del /Q "build\$(CONFIG)\bin\ejsc.lib"
	if exist "build\$(CONFIG)\bin\ejsc.pdb" del /Q "build\$(CONFIG)\bin\ejsc.pdb"
	if exist "build\$(CONFIG)\bin\ejsc.exp" del /Q "build\$(CONFIG)\bin\ejsc.exp"
	if exist "build\$(CONFIG)\bin\ejs.exe" del /Q "build\$(CONFIG)\bin\ejs.exe"
	if exist "build\$(CONFIG)\bin\ejs.lib" del /Q "build\$(CONFIG)\bin\ejs.lib"
	if exist "build\$(CONFIG)\bin\ejs.pdb" del /Q "build\$(CONFIG)\bin\ejs.pdb"
	if exist "build\$(CONFIG)\bin\ejs.exp" del /Q "build\$(CONFIG)\bin\ejs.exp"
	if exist "build\$(CONFIG)\bin\exp.exe" del /Q "build\$(CONFIG)\bin\exp.exe"
	if exist "build\$(CONFIG)\bin\exp.lib" del /Q "build\$(CONFIG)\bin\exp.lib"
	if exist "build\$(CONFIG)\bin\exp.pdb" del /Q "build\$(CONFIG)\bin\exp.pdb"
	if exist "build\$(CONFIG)\bin\exp.exp" del /Q "build\$(CONFIG)\bin\exp.exp"
	if exist "build\$(CONFIG)\bin\ca.crt" del /Q "build\$(CONFIG)\bin\ca.crt"
	if exist "build\$(CONFIG)\bin\http.exe" del /Q "build\$(CONFIG)\bin\http.exe"
	if exist "build\$(CONFIG)\bin\http.lib" del /Q "build\$(CONFIG)\bin\http.lib"
	if exist "build\$(CONFIG)\bin\http.pdb" del /Q "build\$(CONFIG)\bin\http.pdb"
	if exist "build\$(CONFIG)\bin\http.exp" del /Q "build\$(CONFIG)\bin\http.exp"
	if exist "build\$(CONFIG)\bin\libejs.dll" del /Q "build\$(CONFIG)\bin\libejs.dll"
	if exist "build\$(CONFIG)\bin\libejs.lib" del /Q "build\$(CONFIG)\bin\libejs.lib"
	if exist "build\$(CONFIG)\bin\libejs.pdb" del /Q "build\$(CONFIG)\bin\libejs.pdb"
	if exist "build\$(CONFIG)\bin\libejs.exp" del /Q "build\$(CONFIG)\bin\libejs.exp"
	if exist "build\$(CONFIG)\bin\libest.dll" del /Q "build\$(CONFIG)\bin\libest.dll"
	if exist "build\$(CONFIG)\bin\libest.lib" del /Q "build\$(CONFIG)\bin\libest.lib"
	if exist "build\$(CONFIG)\bin\libest.pdb" del /Q "build\$(CONFIG)\bin\libest.pdb"
	if exist "build\$(CONFIG)\bin\libest.exp" del /Q "build\$(CONFIG)\bin\libest.exp"
	if exist "build\$(CONFIG)\bin\libhttp.dll" del /Q "build\$(CONFIG)\bin\libhttp.dll"
	if exist "build\$(CONFIG)\bin\libhttp.lib" del /Q "build\$(CONFIG)\bin\libhttp.lib"
	if exist "build\$(CONFIG)\bin\libhttp.pdb" del /Q "build\$(CONFIG)\bin\libhttp.pdb"
	if exist "build\$(CONFIG)\bin\libhttp.exp" del /Q "build\$(CONFIG)\bin\libhttp.exp"
	if exist "build\$(CONFIG)\bin\libmpr.dll" del /Q "build\$(CONFIG)\bin\libmpr.dll"
	if exist "build\$(CONFIG)\bin\libmpr.lib" del /Q "build\$(CONFIG)\bin\libmpr.lib"
	if exist "build\$(CONFIG)\bin\libmpr.pdb" del /Q "build\$(CONFIG)\bin\libmpr.pdb"
	if exist "build\$(CONFIG)\bin\libmpr.exp" del /Q "build\$(CONFIG)\bin\libmpr.exp"
	if exist "build\$(CONFIG)\bin\libmprssl.dll" del /Q "build\$(CONFIG)\bin\libmprssl.dll"
	if exist "build\$(CONFIG)\bin\libmprssl.lib" del /Q "build\$(CONFIG)\bin\libmprssl.lib"
	if exist "build\$(CONFIG)\bin\libmprssl.pdb" del /Q "build\$(CONFIG)\bin\libmprssl.pdb"
	if exist "build\$(CONFIG)\bin\libmprssl.exp" del /Q "build\$(CONFIG)\bin\libmprssl.exp"
	if exist "build\$(CONFIG)\bin\libpcre.dll" del /Q "build\$(CONFIG)\bin\libpcre.dll"
	if exist "build\$(CONFIG)\bin\libpcre.lib" del /Q "build\$(CONFIG)\bin\libpcre.lib"
	if exist "build\$(CONFIG)\bin\libpcre.pdb" del /Q "build\$(CONFIG)\bin\libpcre.pdb"
	if exist "build\$(CONFIG)\bin\libpcre.exp" del /Q "build\$(CONFIG)\bin\libpcre.exp"
	if exist "build\$(CONFIG)\bin\libzlib.dll" del /Q "build\$(CONFIG)\bin\libzlib.dll"
	if exist "build\$(CONFIG)\bin\libzlib.lib" del /Q "build\$(CONFIG)\bin\libzlib.lib"
	if exist "build\$(CONFIG)\bin\libzlib.pdb" del /Q "build\$(CONFIG)\bin\libzlib.pdb"
	if exist "build\$(CONFIG)\bin\libzlib.exp" del /Q "build\$(CONFIG)\bin\libzlib.exp"
	if exist "build\$(CONFIG)\bin\removeFiles.exe" del /Q "build\$(CONFIG)\bin\removeFiles.exe"
	if exist "build\$(CONFIG)\bin\removeFiles.lib" del /Q "build\$(CONFIG)\bin\removeFiles.lib"
	if exist "build\$(CONFIG)\bin\removeFiles.pdb" del /Q "build\$(CONFIG)\bin\removeFiles.pdb"
	if exist "build\$(CONFIG)\bin\removeFiles.exp" del /Q "build\$(CONFIG)\bin\removeFiles.exp"
	if exist "build\$(CONFIG)\bin\expansive.sample" del /Q "build\$(CONFIG)\bin\expansive.sample"


#
#   me.h
#
build\$(CONFIG)\inc\me.h: $(DEPS_1)

#
#   osdep.h
#
DEPS_2 = $(DEPS_2) src\paks\osdep\osdep.h
DEPS_2 = $(DEPS_2) build\$(CONFIG)\inc\me.h

build\$(CONFIG)\inc\osdep.h: $(DEPS_2)
	@echo '      [Copy] $(BUILD)/inc/osdep.h'
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B src\paks\osdep\osdep.h+modified build\$(CONFIG)\inc\osdep.h $(LOG)

#
#   mpr.h
#
DEPS_3 = $(DEPS_3) src\paks\mpr\mpr.h
DEPS_3 = $(DEPS_3) build\$(CONFIG)\inc\me.h
DEPS_3 = $(DEPS_3) build\$(CONFIG)\inc\osdep.h

build\$(CONFIG)\inc\mpr.h: $(DEPS_3)
	@echo '      [Copy] $(BUILD)/inc/mpr.h'
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B src\paks\mpr\mpr.h+modified build\$(CONFIG)\inc\mpr.h $(LOG)

#
#   http.h
#
DEPS_4 = $(DEPS_4) src\paks\http\http.h
DEPS_4 = $(DEPS_4) build\$(CONFIG)\inc\mpr.h

build\$(CONFIG)\inc\http.h: $(DEPS_4)
	@echo '      [Copy] $(BUILD)/inc/http.h'
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B src\paks\http\http.h+modified build\$(CONFIG)\inc\http.h $(LOG)

#
#   ejs.slots.h
#
src\paks\ejs\ejs.slots.h: $(DEPS_5)

#
#   pcre.h
#
DEPS_6 = $(DEPS_6) src\paks\pcre\pcre.h

build\$(CONFIG)\inc\pcre.h: $(DEPS_6)
	@echo '      [Copy] $(BUILD)/inc/pcre.h'
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B src\paks\pcre\pcre.h+modified build\$(CONFIG)\inc\pcre.h $(LOG)

#
#   zlib.h
#
DEPS_7 = $(DEPS_7) src\paks\zlib\zlib.h
DEPS_7 = $(DEPS_7) build\$(CONFIG)\inc\me.h

build\$(CONFIG)\inc\zlib.h: $(DEPS_7)
	@echo '      [Copy] $(BUILD)/inc/zlib.h'
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B src\paks\zlib\zlib.h+modified build\$(CONFIG)\inc\zlib.h $(LOG)

#
#   ejs.h
#
DEPS_8 = $(DEPS_8) src\paks\ejs\ejs.h
DEPS_8 = $(DEPS_8) build\$(CONFIG)\inc\me.h
DEPS_8 = $(DEPS_8) build\$(CONFIG)\inc\osdep.h
DEPS_8 = $(DEPS_8) build\$(CONFIG)\inc\mpr.h
DEPS_8 = $(DEPS_8) build\$(CONFIG)\inc\http.h
DEPS_8 = $(DEPS_8) src\paks\ejs\ejs.slots.h
DEPS_8 = $(DEPS_8) build\$(CONFIG)\inc\pcre.h
DEPS_8 = $(DEPS_8) build\$(CONFIG)\inc\zlib.h

build\$(CONFIG)\inc\ejs.h: $(DEPS_8)
	@echo '      [Copy] $(BUILD)/inc/ejs.h'
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B src\paks\ejs\ejs.h+modified build\$(CONFIG)\inc\ejs.h $(LOG)

#
#   ejs.slots.h
#
DEPS_9 = $(DEPS_9) src\paks\ejs\ejs.slots.h

build\$(CONFIG)\inc\ejs.slots.h: $(DEPS_9)
	@echo '      [Copy] $(BUILD)/inc/ejs.slots.h'
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B src\paks\ejs\ejs.slots.h+modified build\$(CONFIG)\inc\ejs.slots.h $(LOG)

#
#   ejsByteGoto.h
#
DEPS_10 = $(DEPS_10) src\paks\ejs\ejsByteGoto.h

build\$(CONFIG)\inc\ejsByteGoto.h: $(DEPS_10)
	@echo '      [Copy] $(BUILD)/inc/ejsByteGoto.h'
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B src\paks\ejs\ejsByteGoto.h+modified build\$(CONFIG)\inc\ejsByteGoto.h $(LOG)

#
#   est.h
#
DEPS_11 = $(DEPS_11) src\paks\est\est.h

build\$(CONFIG)\inc\est.h: $(DEPS_11)
	@echo '      [Copy] $(BUILD)/inc/est.h'
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B src\paks\est\est.h+modified build\$(CONFIG)\inc\est.h $(LOG)

#
#   exp.h
#
build\$(CONFIG)\inc\exp.h: $(DEPS_12)

#
#   ejs.h
#
src\paks\ejs\ejs.h: $(DEPS_13)

#
#   ejs.obj
#
DEPS_14 = $(DEPS_14) src\paks\ejs\ejs.h

build\$(CONFIG)\obj\ejs.obj: \
    src\paks\ejs\ejs.c $(DEPS_14)
	@echo '   [Compile] $(BUILD)/obj/ejs.obj'
	"$(CC)" -c -Fo$(BUILD)\obj\ejs.obj -Fd$(BUILD)\obj\ejs.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\paks\ejs\ejs.c $(LOG)

#
#   ejsLib.obj
#
DEPS_15 = $(DEPS_15) src\paks\ejs\ejs.h
DEPS_15 = $(DEPS_15) build\$(CONFIG)\inc\mpr.h
DEPS_15 = $(DEPS_15) build\$(CONFIG)\inc\pcre.h
DEPS_15 = $(DEPS_15) build\$(CONFIG)\inc\me.h

build\$(CONFIG)\obj\ejsLib.obj: \
    src\paks\ejs\ejsLib.c $(DEPS_15)
	@echo '   [Compile] $(BUILD)/obj/ejsLib.obj'
	"$(CC)" -c -Fo$(BUILD)\obj\ejsLib.obj -Fd$(BUILD)\obj\ejsLib.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\paks\ejs\ejsLib.c $(LOG)

#
#   ejsc.obj
#
DEPS_16 = $(DEPS_16) src\paks\ejs\ejs.h

build\$(CONFIG)\obj\ejsc.obj: \
    src\paks\ejs\ejsc.c $(DEPS_16)
	@echo '   [Compile] $(BUILD)/obj/ejsc.obj'
	"$(CC)" -c -Fo$(BUILD)\obj\ejsc.obj -Fd$(BUILD)\obj\ejsc.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\paks\ejs\ejsc.c $(LOG)

#
#   est.h
#
src\paks\est\est.h: $(DEPS_17)

#
#   estLib.obj
#
DEPS_18 = $(DEPS_18) src\paks\est\est.h

build\$(CONFIG)\obj\estLib.obj: \
    src\paks\est\estLib.c $(DEPS_18)
	@echo '   [Compile] $(BUILD)/obj/estLib.obj'
	"$(CC)" -c -Fo$(BUILD)\obj\estLib.obj -Fd$(BUILD)\obj\estLib.pdb -nologo -GR- -Zi -Od -MDd $(DFLAGS) $(IFLAGS) src\paks\est\estLib.c $(LOG)

#
#   exp.obj
#
DEPS_19 = $(DEPS_19) build\$(CONFIG)\inc\ejs.h
DEPS_19 = $(DEPS_19) build\$(CONFIG)\inc\exp.h

build\$(CONFIG)\obj\exp.obj: \
    src\exp.c $(DEPS_19)
	@echo '   [Compile] $(BUILD)/obj/exp.obj'
	"$(CC)" -c -Fo$(BUILD)\obj\exp.obj -Fd$(BUILD)\obj\exp.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\exp.c $(LOG)

#
#   expTemplate.obj
#
DEPS_20 = $(DEPS_20) build\$(CONFIG)\inc\ejs.h
DEPS_20 = $(DEPS_20) build\$(CONFIG)\inc\exp.h

build\$(CONFIG)\obj\expTemplate.obj: \
    src\expTemplate.c $(DEPS_20)
	@echo '   [Compile] $(BUILD)/obj/expTemplate.obj'
	"$(CC)" -c -Fo$(BUILD)\obj\expTemplate.obj -Fd$(BUILD)\obj\expTemplate.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\expTemplate.c $(LOG)

#
#   http.h
#
src\paks\http\http.h: $(DEPS_21)

#
#   http.obj
#
DEPS_22 = $(DEPS_22) src\paks\http\http.h

build\$(CONFIG)\obj\http.obj: \
    src\paks\http\http.c $(DEPS_22)
	@echo '   [Compile] $(BUILD)/obj/http.obj'
	"$(CC)" -c -Fo$(BUILD)\obj\http.obj -Fd$(BUILD)\obj\http.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\paks\http\http.c $(LOG)

#
#   httpLib.obj
#
DEPS_23 = $(DEPS_23) src\paks\http\http.h

build\$(CONFIG)\obj\httpLib.obj: \
    src\paks\http\httpLib.c $(DEPS_23)
	@echo '   [Compile] $(BUILD)/obj/httpLib.obj'
	"$(CC)" -c -Fo$(BUILD)\obj\httpLib.obj -Fd$(BUILD)\obj\httpLib.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\paks\http\httpLib.c $(LOG)

#
#   mpr.h
#
src\paks\mpr\mpr.h: $(DEPS_24)

#
#   mprLib.obj
#
DEPS_25 = $(DEPS_25) src\paks\mpr\mpr.h

build\$(CONFIG)\obj\mprLib.obj: \
    src\paks\mpr\mprLib.c $(DEPS_25)
	@echo '   [Compile] $(BUILD)/obj/mprLib.obj'
	"$(CC)" -c -Fo$(BUILD)\obj\mprLib.obj -Fd$(BUILD)\obj\mprLib.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\paks\mpr\mprLib.c $(LOG)

#
#   mprSsl.obj
#
DEPS_26 = $(DEPS_26) build\$(CONFIG)\inc\me.h
DEPS_26 = $(DEPS_26) src\paks\mpr\mpr.h

build\$(CONFIG)\obj\mprSsl.obj: \
    src\paks\mpr\mprSsl.c $(DEPS_26)
	@echo '   [Compile] $(BUILD)/obj/mprSsl.obj'
	"$(CC)" -c -Fo$(BUILD)\obj\mprSsl.obj -Fd$(BUILD)\obj\mprSsl.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)\include" src\paks\mpr\mprSsl.c $(LOG)

#
#   pcre.h
#
src\paks\pcre\pcre.h: $(DEPS_27)

#
#   pcre.obj
#
DEPS_28 = $(DEPS_28) build\$(CONFIG)\inc\me.h
DEPS_28 = $(DEPS_28) src\paks\pcre\pcre.h

build\$(CONFIG)\obj\pcre.obj: \
    src\paks\pcre\pcre.c $(DEPS_28)
	@echo '   [Compile] $(BUILD)/obj/pcre.obj'
	"$(CC)" -c -Fo$(BUILD)\obj\pcre.obj -Fd$(BUILD)\obj\pcre.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\paks\pcre\pcre.c $(LOG)

#
#   removeFiles.obj
#
DEPS_29 = $(DEPS_29) build\$(CONFIG)\inc\me.h

build\$(CONFIG)\obj\removeFiles.obj: \
    package\windows\removeFiles.c $(DEPS_29)
	@echo '   [Compile] $(BUILD)/obj/removeFiles.obj'
	"$(CC)" -c -Fo$(BUILD)\obj\removeFiles.obj -Fd$(BUILD)\obj\removeFiles.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) package\windows\removeFiles.c $(LOG)

#
#   zlib.h
#
src\paks\zlib\zlib.h: $(DEPS_30)

#
#   zlib.obj
#
DEPS_31 = $(DEPS_31) build\$(CONFIG)\inc\me.h
DEPS_31 = $(DEPS_31) src\paks\zlib\zlib.h

build\$(CONFIG)\obj\zlib.obj: \
    src\paks\zlib\zlib.c $(DEPS_31)
	@echo '   [Compile] $(BUILD)/obj/zlib.obj'
	"$(CC)" -c -Fo$(BUILD)\obj\zlib.obj -Fd$(BUILD)\obj\zlib.pdb $(CFLAGS) $(DFLAGS) $(IFLAGS) src\paks\zlib\zlib.c $(LOG)

#
#   libmpr
#
DEPS_32 = $(DEPS_32) build\$(CONFIG)\inc\mpr.h
DEPS_32 = $(DEPS_32) build\$(CONFIG)\obj\mprLib.obj

build\$(CONFIG)\bin\libmpr.dll: $(DEPS_32)
	@echo '      [Link] $(BUILD)/bin/libmpr.dll'
	"$(LD)" -dll -out:$(BUILD)\bin\libmpr.dll -entry:undefined $(LDFLAGS) $(LIBPATHS) "$(BUILD)\obj\mprLib.obj" $(LIBS)  $(LOG)

!IF "$(ME_COM_PCRE)" == "1"
#
#   libpcre
#
DEPS_33 = $(DEPS_33) build\$(CONFIG)\inc\pcre.h
DEPS_33 = $(DEPS_33) build\$(CONFIG)\obj\pcre.obj

build\$(CONFIG)\bin\libpcre.dll: $(DEPS_33)
	@echo '      [Link] $(BUILD)/bin/libpcre.dll'
	"$(LD)" -dll -out:$(BUILD)\bin\libpcre.dll -entry:undefined $(LDFLAGS) $(LIBPATHS) "$(BUILD)\obj\pcre.obj" $(LIBS)  $(LOG)
!ENDIF

!IF "$(ME_COM_HTTP)" == "1"
#
#   libhttp
#
DEPS_34 = $(DEPS_34) build\$(CONFIG)\bin\libmpr.dll
!IF "$(ME_COM_PCRE)" == "1"
DEPS_34 = $(DEPS_34) build\$(CONFIG)\bin\libpcre.dll
!ENDIF
DEPS_34 = $(DEPS_34) build\$(CONFIG)\inc\http.h
DEPS_34 = $(DEPS_34) build\$(CONFIG)\obj\httpLib.obj

LIBS_34 = $(LIBS_34) libmpr.lib
!IF "$(ME_COM_PCRE)" == "1"
LIBS_34 = $(LIBS_34) libpcre.lib
!ENDIF

build\$(CONFIG)\bin\libhttp.dll: $(DEPS_34)
	@echo '      [Link] $(BUILD)/bin/libhttp.dll'
	"$(LD)" -dll -out:$(BUILD)\bin\libhttp.dll -entry:undefined $(LDFLAGS) $(LIBPATHS) "$(BUILD)\obj\httpLib.obj" $(LIBPATHS_34) $(LIBS_34) $(LIBS_34) $(LIBS)  $(LOG)
!ENDIF

!IF "$(ME_COM_ZLIB)" == "1"
#
#   libzlib
#
DEPS_35 = $(DEPS_35) build\$(CONFIG)\inc\zlib.h
DEPS_35 = $(DEPS_35) build\$(CONFIG)\obj\zlib.obj

build\$(CONFIG)\bin\libzlib.dll: $(DEPS_35)
	@echo '      [Link] $(BUILD)/bin/libzlib.dll'
	"$(LD)" -dll -out:$(BUILD)\bin\libzlib.dll -entry:undefined $(LDFLAGS) $(LIBPATHS) "$(BUILD)\obj\zlib.obj" $(LIBS)  $(LOG)
!ENDIF

!IF "$(ME_COM_EJS)" == "1"
#
#   libejs
#
!IF "$(ME_COM_HTTP)" == "1"
DEPS_36 = $(DEPS_36) build\$(CONFIG)\bin\libhttp.dll
!ENDIF
!IF "$(ME_COM_PCRE)" == "1"
DEPS_36 = $(DEPS_36) build\$(CONFIG)\bin\libpcre.dll
!ENDIF
DEPS_36 = $(DEPS_36) build\$(CONFIG)\bin\libmpr.dll
!IF "$(ME_COM_ZLIB)" == "1"
DEPS_36 = $(DEPS_36) build\$(CONFIG)\bin\libzlib.dll
!ENDIF
DEPS_36 = $(DEPS_36) build\$(CONFIG)\inc\ejs.h
DEPS_36 = $(DEPS_36) build\$(CONFIG)\inc\ejs.slots.h
DEPS_36 = $(DEPS_36) build\$(CONFIG)\inc\ejsByteGoto.h
DEPS_36 = $(DEPS_36) build\$(CONFIG)\obj\ejsLib.obj

!IF "$(ME_COM_HTTP)" == "1"
LIBS_36 = $(LIBS_36) libhttp.lib
!ENDIF
LIBS_36 = $(LIBS_36) libmpr.lib
!IF "$(ME_COM_PCRE)" == "1"
LIBS_36 = $(LIBS_36) libpcre.lib
!ENDIF
!IF "$(ME_COM_ZLIB)" == "1"
LIBS_36 = $(LIBS_36) libzlib.lib
!ENDIF

build\$(CONFIG)\bin\libejs.dll: $(DEPS_36)
	@echo '      [Link] $(BUILD)/bin/libejs.dll'
	"$(LD)" -dll -out:$(BUILD)\bin\libejs.dll -entry:undefined $(LDFLAGS) $(LIBPATHS) "$(BUILD)\obj\ejsLib.obj" $(LIBPATHS_36) $(LIBS_36) $(LIBS_36) $(LIBS)  $(LOG)
!ENDIF

!IF "$(ME_COM_EJS)" == "1"
#
#   ejsc
#
DEPS_37 = $(DEPS_37) build\$(CONFIG)\bin\libejs.dll
DEPS_37 = $(DEPS_37) build\$(CONFIG)\obj\ejsc.obj

LIBS_37 = $(LIBS_37) libejs.lib
!IF "$(ME_COM_HTTP)" == "1"
LIBS_37 = $(LIBS_37) libhttp.lib
!ENDIF
LIBS_37 = $(LIBS_37) libmpr.lib
!IF "$(ME_COM_PCRE)" == "1"
LIBS_37 = $(LIBS_37) libpcre.lib
!ENDIF
!IF "$(ME_COM_ZLIB)" == "1"
LIBS_37 = $(LIBS_37) libzlib.lib
!ENDIF

build\$(CONFIG)\bin\ejsc.exe: $(DEPS_37)
	@echo '      [Link] $(BUILD)/bin/ejsc.exe'
	"$(LD)" -out:$(BUILD)\bin\ejsc.exe -entry:undefined -subsystem:console $(LDFLAGS) $(LIBPATHS) "$(BUILD)\obj\ejsc.obj" $(LIBPATHS_37) $(LIBS_37) $(LIBS_37) $(LIBS)  $(LOG)
!ENDIF

!IF "$(ME_COM_EJS)" == "1"
#
#   ejs.mod
#
DEPS_38 = $(DEPS_38) src\paks\ejs\ejs.es
DEPS_38 = $(DEPS_38) build\$(CONFIG)\bin\ejsc.exe

build\$(CONFIG)\bin\ejs.mod: $(DEPS_38)
#  Omit build script ejs.mod
!ENDIF

!IF "$(ME_COM_EJS)" == "1"
#
#   ejscmd
#
DEPS_39 = $(DEPS_39) build\$(CONFIG)\bin\libejs.dll
DEPS_39 = $(DEPS_39) build\$(CONFIG)\obj\ejs.obj

LIBS_39 = $(LIBS_39) libejs.lib
!IF "$(ME_COM_HTTP)" == "1"
LIBS_39 = $(LIBS_39) libhttp.lib
!ENDIF
LIBS_39 = $(LIBS_39) libmpr.lib
!IF "$(ME_COM_PCRE)" == "1"
LIBS_39 = $(LIBS_39) libpcre.lib
!ENDIF
!IF "$(ME_COM_ZLIB)" == "1"
LIBS_39 = $(LIBS_39) libzlib.lib
!ENDIF

build\$(CONFIG)\bin\ejs.exe: $(DEPS_39)
	@echo '      [Link] $(BUILD)/bin/ejs.exe'
	"$(LD)" -out:$(BUILD)\bin\ejs.exe -entry:undefined -subsystem:console $(LDFLAGS) $(LIBPATHS) "$(BUILD)\obj\ejs.obj" $(LIBPATHS_39) $(LIBS_39) $(LIBS_39) $(LIBS)  $(LOG)
!ENDIF

#
#   exp.mod
#
DEPS_40 = $(DEPS_40) src\exp.es
DEPS_40 = $(DEPS_40) src\ExpTemplate.es
DEPS_40 = $(DEPS_40) src\paks\ejs-version\Version.es
!IF "$(ME_COM_EJS)" == "1"
DEPS_40 = $(DEPS_40) build\$(CONFIG)\bin\ejsc.exe
!ENDIF

build\$(CONFIG)\bin\exp.mod: $(DEPS_40)
#  Omit build script exp.mod

#
#   exp
#
DEPS_41 = $(DEPS_41) build\$(CONFIG)\bin\libmpr.dll
!IF "$(ME_COM_HTTP)" == "1"
DEPS_41 = $(DEPS_41) build\$(CONFIG)\bin\libhttp.dll
!ENDIF
!IF "$(ME_COM_EJS)" == "1"
DEPS_41 = $(DEPS_41) build\$(CONFIG)\bin\libejs.dll
!ENDIF
DEPS_41 = $(DEPS_41) build\$(CONFIG)\bin\exp.mod
DEPS_41 = $(DEPS_41) build\$(CONFIG)\obj\exp.obj
DEPS_41 = $(DEPS_41) build\$(CONFIG)\obj\expTemplate.obj

LIBS_41 = $(LIBS_41) libmpr.lib
!IF "$(ME_COM_HTTP)" == "1"
LIBS_41 = $(LIBS_41) libhttp.lib
!ENDIF
!IF "$(ME_COM_PCRE)" == "1"
LIBS_41 = $(LIBS_41) libpcre.lib
!ENDIF
!IF "$(ME_COM_EJS)" == "1"
LIBS_41 = $(LIBS_41) libejs.lib
!ENDIF
!IF "$(ME_COM_ZLIB)" == "1"
LIBS_41 = $(LIBS_41) libzlib.lib
!ENDIF

build\$(CONFIG)\bin\exp.exe: $(DEPS_41)
	@echo '      [Link] $(BUILD)/bin/exp.exe'
	"$(LD)" -out:$(BUILD)\bin\exp.exe -entry:undefined -subsystem:console $(LDFLAGS) $(LIBPATHS) "$(BUILD)\obj\exp.obj" "$(BUILD)\obj\expTemplate.obj" $(LIBPATHS_41) $(LIBS_41) $(LIBS_41) $(LIBS)  $(LOG)


#
#   http-ca-crt
#
DEPS_42 = $(DEPS_42) src\paks\http\ca.crt

build\$(CONFIG)\bin\ca.crt: $(DEPS_42)
	@echo '      [Copy] $(BUILD)/bin/ca.crt'
	if not exist "build\$(CONFIG)\bin" md "build\$(CONFIG)\bin"
	copy /Y /B src\paks\http\ca.crt+modified build\$(CONFIG)\bin\ca.crt $(LOG)

!IF "$(ME_COM_HTTP)" == "1"
#
#   httpcmd
#
DEPS_43 = $(DEPS_43) build\$(CONFIG)\bin\libhttp.dll
DEPS_43 = $(DEPS_43) build\$(CONFIG)\obj\http.obj

LIBS_43 = $(LIBS_43) libhttp.lib
LIBS_43 = $(LIBS_43) libmpr.lib
!IF "$(ME_COM_PCRE)" == "1"
LIBS_43 = $(LIBS_43) libpcre.lib
!ENDIF

build\$(CONFIG)\bin\http.exe: $(DEPS_43)
	@echo '      [Link] $(BUILD)/bin/http.exe'
	"$(LD)" -out:$(BUILD)\bin\http.exe -entry:undefined -subsystem:console $(LDFLAGS) $(LIBPATHS) "$(BUILD)\obj\http.obj" $(LIBPATHS_43) $(LIBS_43) $(LIBS_43) $(LIBS)  $(LOG)
!ENDIF

!IF "$(ME_COM_EST)" == "1"
#
#   libest
#
DEPS_44 = $(DEPS_44) build\$(CONFIG)\inc\est.h
DEPS_44 = $(DEPS_44) build\$(CONFIG)\obj\estLib.obj

build\$(CONFIG)\bin\libest.dll: $(DEPS_44)
	@echo '      [Link] $(BUILD)/bin/libest.dll'
	"$(LD)" -dll -out:$(BUILD)\bin\libest.dll -entry:undefined $(LDFLAGS) $(LIBPATHS) "$(BUILD)\obj\estLib.obj" $(LIBS)  $(LOG)
!ENDIF

#
#   libmprssl
#
DEPS_45 = $(DEPS_45) build\$(CONFIG)\bin\libmpr.dll
DEPS_45 = $(DEPS_45) build\$(CONFIG)\obj\mprSsl.obj

LIBS_45 = $(LIBS_45) libmpr.lib
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_45 = $(LIBS_45) libeay32.lib
LIBPATHS_45 = $(LIBPATHS_45) -libpath:$(ME_COM_OPENSSL_PATH)
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_45 = $(LIBS_45) libssleay32.lib
LIBPATHS_45 = $(LIBPATHS_45) -libpath:$(ME_COM_OPENSSL_PATH)
!ENDIF
!IF "$(ME_COM_EST)" == "1"
LIBS_45 = $(LIBS_45) libest.lib
!ENDIF

build\$(CONFIG)\bin\libmprssl.dll: $(DEPS_45)
	@echo '      [Link] $(BUILD)/bin/libmprssl.dll'
	"$(LD)" -dll -out:$(BUILD)\bin\libmprssl.dll -entry:undefined $(LDFLAGS) $(LIBPATHS)  "$(BUILD)\obj\mprSsl.obj" $(LIBPATHS_45) $(LIBS_45) $(LIBS_45) $(LIBS)  $(LOG)

#
#   removeFiles
#
DEPS_46 = $(DEPS_46) build\$(CONFIG)\obj\removeFiles.obj

build\$(CONFIG)\bin\removeFiles.exe: $(DEPS_46)
	@echo '      [Link] $(BUILD)/bin/removeFiles.exe'
	"$(LD)" -out:$(BUILD)\bin\removeFiles.exe -entry:undefined -subsystem:windows $(LDFLAGS) $(LIBPATHS) "$(BUILD)\obj\removeFiles.obj" $(LIBS)  $(LOG)

#
#   sample
#
DEPS_47 = $(DEPS_47) src\expansive.sample

build\$(CONFIG)\bin\expansive.sample: $(DEPS_47)
	@echo '      [Copy] $(BUILD)/bin/expansive.sample'
	if not exist "build\$(CONFIG)\bin" md "build\$(CONFIG)\bin"
	copy /Y /B src\expansive.sample+modified build\$(CONFIG)\bin\expansive.sample $(LOG)


#
#   installBinary
#
installBinary: $(DEPS_48)
#  Omit build script installBinary


#
#   install
#
DEPS_49 = $(DEPS_49) stop
DEPS_49 = $(DEPS_49) installBinary
DEPS_49 = $(DEPS_49) start

install: $(DEPS_49)
#  Omit build script install

#
#   uninstall
#
DEPS_50 = $(DEPS_50) stop

uninstall: $(DEPS_50)
#  Omit build script uninstall

#
#   version
#
version: $(DEPS_51)
	echo 0.4.1

