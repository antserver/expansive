#
#   expansive-windows-default.nmake -- Makefile to build Embedthis Expansive for windows
#

NAME                  = expansive
VERSION               = 0.5.7

OS                    = windows
PA                    = $(PROCESSOR_ARCHITECTURE)
!IF "$(PROFILE)" == ""
PROFILE               = default
!ENDIF


!IF "$(PA)" == "AMD64"
ARCH                  = x64
ENTRY                 = _DllMainCRTStartup
!ELSE
ARCH                  = x86
ENTRY                 = _DllMainCRTStartup@12
!ENDIF

!IF "$(CONFIG)" == ""
CONFIG                = $(OS)-$(ARCH)-$(PROFILE)
!ENDIF

!IF "$(BUILD)" == ""
BUILD                 = build\$(CONFIG)
!ENDIF

LBIN                  = $(BUILD)\bin

!IF "$(ME_COM_COMPILER)" == ""
ME_COM_COMPILER       = 1
!ENDIF
!IF "$(ME_COM_EJSCRIPT)" == ""
ME_COM_EJSCRIPT       = 1
!ENDIF
!IF "$(ME_COM_HTTP)" == ""
ME_COM_HTTP           = 1
!ENDIF
!IF "$(ME_COM_LIB)" == ""
ME_COM_LIB            = 1
!ENDIF
!IF "$(ME_COM_LINK)" == ""
ME_COM_LINK           = 1
!ENDIF
!IF "$(ME_COM_MATRIXSSL)" == ""
ME_COM_MATRIXSSL      = 0
!ENDIF
!IF "$(ME_COM_MBEDTLS)" == ""
ME_COM_MBEDTLS        = 1
!ENDIF
!IF "$(ME_COM_MPR)" == ""
ME_COM_MPR            = 1
!ENDIF
!IF "$(ME_COM_NANOSSL)" == ""
ME_COM_NANOSSL        = 0
!ENDIF
!IF "$(ME_COM_OPENSSL)" == ""
ME_COM_OPENSSL        = 0
!ENDIF
!IF "$(ME_COM_OSDEP)" == ""
ME_COM_OSDEP          = 1
!ENDIF
!IF "$(ME_COM_PCRE)" == ""
ME_COM_PCRE           = 1
!ENDIF
!IF "$(ME_COM_RC)" == ""
ME_COM_RC             = 1
!ENDIF
!IF "$(ME_COM_SQLITE)" == ""
ME_COM_SQLITE         = 0
!ENDIF
!IF "$(ME_COM_SSL)" == ""
ME_COM_SSL            = 0
!ENDIF
!IF "$(ME_COM_VXWORKS)" == ""
ME_COM_VXWORKS        = 0
!ENDIF
!IF "$(ME_COM_ZLIB)" == ""
ME_COM_ZLIB           = 1
!ENDIF

!IF "$(ME_COM_OPENSSL)" == ""
ME_COM_OPENSSL_PATH   = ""
!ENDIF

!IF "$(ME_COM_LIB)" == "1"
ME_COM_COMPILER       = 1
!ENDIF

!IF "$(ME_COM_LINK)" == "1"
ME_COM_COMPILER       = 1
!ENDIF

!IF "$(ME_COM_MBEDTLS)" == "1"
ME_COM_SSL            = 1
!ENDIF

!IF "$(ME_COM_OPENSSL)" == "1"
ME_COM_SSL            = 1
!ENDIF

!IF "$(ME_COM_RC)" == "1"
ME_COM_COMPILER       = 1
!ENDIF

!IF "$(ME_COM_ZLIB)" == ""
ME_COM_ZLIB           = 1
!ENDIF


CC                    = cl
LD                    = link
RC                    = rc
CFLAGS                = -nologo -GR- -W3 -Zi -Od -MDd
DFLAGS                =  -DME_COM_COMPILER=$(ME_COM_COMPILER) -DME_COM_EJSCRIPT=$(ME_COM_EJSCRIPT) -DME_COM_HTTP=$(ME_COM_HTTP) -DME_COM_LIB=$(ME_COM_LIB) -DME_COM_LINK=$(ME_COM_LINK) -DME_COM_MATRIXSSL=$(ME_COM_MATRIXSSL) -DME_COM_MBEDTLS=$(ME_COM_MBEDTLS) -DME_COM_MPR=$(ME_COM_MPR) -DME_COM_NANOSSL=$(ME_COM_NANOSSL) -DME_COM_OPENSSL=$(ME_COM_OPENSSL) -DME_COM_OSDEP=$(ME_COM_OSDEP) -DME_COM_PCRE=$(ME_COM_PCRE) -DME_COM_RC=$(ME_COM_RC) -DME_COM_SQLITE=$(ME_COM_SQLITE) -DME_COM_SSL=$(ME_COM_SSL) -DME_COM_VXWORKS=$(ME_COM_VXWORKS) -DME_COM_ZLIB=$(ME_COM_ZLIB) 
IFLAGS                = -Ibuild\$(CONFIG)\inc
LDFLAGS               = -nologo -incremental:no -debug -machine:$(ARCH)
LIBPATHS              = "-libpath:$(BUILD)\bin"
LIBS                  = ws2_32.lib advapi32.lib user32.lib kernel32.lib oldnames.lib shell32.lib

ME_ROOT_PREFIX        = C:
ME_BASE_PREFIX        = $(ME_ROOT_PREFIX)\Program Files
ME_APP_PREFIX         = $(ME_BASE_PREFIX)\Embedthis Expansive
ME_VAPP_PREFIX        = $(ME_APP_PREFIX)
ME_DATA_PREFIX        = $(ME_VAPP_PREFIX)
ME_STATE_PREFIX       = $(ME_VAPP_PREFIX)
ME_BIN_PREFIX         = $(ME_VAPP_PREFIX)\bin
ME_INC_PREFIX         = $(ME_VAPP_PREFIX)\inc
ME_LIB_PREFIX         = $(ME_VAPP_PREFIX)\lib
ME_MAN_PREFIX         = $(ME_VAPP_PREFIX)\man
ME_ETC_PREFIX         = $(ME_VAPP_PREFIX)
ME_WEB_PREFIX         = $(ME_VAPP_PREFIX)\web
ME_LOG_PREFIX         = $(ME_VAPP_PREFIX)\log
ME_SPOOL_PREFIX       = $(ME_VAPP_PREFIX)\tmp
ME_CACHE_PREFIX       = $(ME_VAPP_PREFIX)\cache
ME_SRC_PREFIX         = $(ME_VAPP_PREFIX)\src


!IF "$(ME_COM_EJSCRIPT)" == "1"
TARGETS               = $(TARGETS) build\$(CONFIG)\bin\ejs.mod
!ENDIF
TARGETS               = $(TARGETS) build\$(CONFIG)\bin\expansive.exe
TARGETS               = $(TARGETS) build\$(CONFIG)\.install-certs-modified
TARGETS               = $(TARGETS) build\$(CONFIG)\bin\sample.json

!IFNDEF SHOW
.SILENT:
!ENDIF

all build compile: prep $(TARGETS)

.PHONY: prep

prep:
!IF "$(VSINSTALLDIR)" == ""
	echo "Visual Studio vars not set. Run vcvars.bat."
	exit 255
!ENDIF
!IF "$(ME_APP_PREFIX)" == ""
	echo "ME_APP_PREFIX not set."
	exit 255
!ENDIF
	@if not exist $(BUILD)\bin md $(BUILD)\bin
	@if not exist $(BUILD)\inc md $(BUILD)\inc
	@if not exist $(BUILD)\obj md $(BUILD)\obj
	@if not exist $(BUILD)\inc\me.h copy projects\expansive-windows-default-me.h $(BUILD)\inc\me.h

!IF "$(SHOW)" != ""
	@echo ..... [Info] Use "make SHOW=1" to trace executed commands and errors.
LOG =
!ELSE
LOG = >nul
!ENDIF

clean:
	if exist "build\$(CONFIG)\obj\ejs.obj" del /Q "build\$(CONFIG)\obj\ejs.obj"
	if exist "build\$(CONFIG)\obj\ejsLib.obj" del /Q "build\$(CONFIG)\obj\ejsLib.obj"
	if exist "build\$(CONFIG)\obj\ejsc.obj" del /Q "build\$(CONFIG)\obj\ejsc.obj"
	if exist "build\$(CONFIG)\obj\expParser.obj" del /Q "build\$(CONFIG)\obj\expParser.obj"
	if exist "build\$(CONFIG)\obj\expansive.obj" del /Q "build\$(CONFIG)\obj\expansive.obj"
	if exist "build\$(CONFIG)\obj\http.obj" del /Q "build\$(CONFIG)\obj\http.obj"
	if exist "build\$(CONFIG)\obj\httpLib.obj" del /Q "build\$(CONFIG)\obj\httpLib.obj"
	if exist "build\$(CONFIG)\obj\mbedtlsLib.obj" del /Q "build\$(CONFIG)\obj\mbedtlsLib.obj"
	if exist "build\$(CONFIG)\obj\mpr-mbedtls.obj" del /Q "build\$(CONFIG)\obj\mpr-mbedtls.obj"
	if exist "build\$(CONFIG)\obj\mpr-openssl.obj" del /Q "build\$(CONFIG)\obj\mpr-openssl.obj"
	if exist "build\$(CONFIG)\obj\mprLib.obj" del /Q "build\$(CONFIG)\obj\mprLib.obj"
	if exist "build\$(CONFIG)\obj\pcre.obj" del /Q "build\$(CONFIG)\obj\pcre.obj"
	if exist "build\$(CONFIG)\obj\zlib.obj" del /Q "build\$(CONFIG)\obj\zlib.obj"
	if exist "build\$(CONFIG)\bin\expansive-ejsc.exe" del /Q "build\$(CONFIG)\bin\expansive-ejsc.exe"
	if exist "build\$(CONFIG)\bin\expansive-ejsc.lib" del /Q "build\$(CONFIG)\bin\expansive-ejsc.lib"
	if exist "build\$(CONFIG)\bin\expansive-ejsc.pdb" del /Q "build\$(CONFIG)\bin\expansive-ejsc.pdb"
	if exist "build\$(CONFIG)\bin\expansive-ejsc.exp" del /Q "build\$(CONFIG)\bin\expansive-ejsc.exp"
	if exist "build\$(CONFIG)\bin\expansive.exe" del /Q "build\$(CONFIG)\bin\expansive.exe"
	if exist "build\$(CONFIG)\bin\expansive.lib" del /Q "build\$(CONFIG)\bin\expansive.lib"
	if exist "build\$(CONFIG)\bin\expansive.pdb" del /Q "build\$(CONFIG)\bin\expansive.pdb"
	if exist "build\$(CONFIG)\bin\expansive.exp" del /Q "build\$(CONFIG)\bin\expansive.exp"
	if exist "build\$(CONFIG)\.install-certs-modified" del /Q "build\$(CONFIG)\.install-certs-modified"
	if exist "build\$(CONFIG)\bin\libejs.dll" del /Q "build\$(CONFIG)\bin\libejs.dll"
	if exist "build\$(CONFIG)\bin\libejs.lib" del /Q "build\$(CONFIG)\bin\libejs.lib"
	if exist "build\$(CONFIG)\bin\libejs.pdb" del /Q "build\$(CONFIG)\bin\libejs.pdb"
	if exist "build\$(CONFIG)\bin\libejs.exp" del /Q "build\$(CONFIG)\bin\libejs.exp"
	if exist "build\$(CONFIG)\bin\libhttp.dll" del /Q "build\$(CONFIG)\bin\libhttp.dll"
	if exist "build\$(CONFIG)\bin\libhttp.lib" del /Q "build\$(CONFIG)\bin\libhttp.lib"
	if exist "build\$(CONFIG)\bin\libhttp.pdb" del /Q "build\$(CONFIG)\bin\libhttp.pdb"
	if exist "build\$(CONFIG)\bin\libhttp.exp" del /Q "build\$(CONFIG)\bin\libhttp.exp"
	if exist "build\$(CONFIG)\bin\libmbedtls.lib" del /Q "build\$(CONFIG)\bin\libmbedtls.lib"
	if exist "build\$(CONFIG)\bin\libmpr.dll" del /Q "build\$(CONFIG)\bin\libmpr.dll"
	if exist "build\$(CONFIG)\bin\libmpr.lib" del /Q "build\$(CONFIG)\bin\libmpr.lib"
	if exist "build\$(CONFIG)\bin\libmpr.pdb" del /Q "build\$(CONFIG)\bin\libmpr.pdb"
	if exist "build\$(CONFIG)\bin\libmpr.exp" del /Q "build\$(CONFIG)\bin\libmpr.exp"
	if exist "build\$(CONFIG)\bin\libmpr-mbedtls.lib" del /Q "build\$(CONFIG)\bin\libmpr-mbedtls.lib"
	if exist "build\$(CONFIG)\bin\libpcre.dll" del /Q "build\$(CONFIG)\bin\libpcre.dll"
	if exist "build\$(CONFIG)\bin\libpcre.lib" del /Q "build\$(CONFIG)\bin\libpcre.lib"
	if exist "build\$(CONFIG)\bin\libpcre.pdb" del /Q "build\$(CONFIG)\bin\libpcre.pdb"
	if exist "build\$(CONFIG)\bin\libpcre.exp" del /Q "build\$(CONFIG)\bin\libpcre.exp"
	if exist "build\$(CONFIG)\bin\libzlib.dll" del /Q "build\$(CONFIG)\bin\libzlib.dll"
	if exist "build\$(CONFIG)\bin\libzlib.lib" del /Q "build\$(CONFIG)\bin\libzlib.lib"
	if exist "build\$(CONFIG)\bin\libzlib.pdb" del /Q "build\$(CONFIG)\bin\libzlib.pdb"
	if exist "build\$(CONFIG)\bin\libzlib.exp" del /Q "build\$(CONFIG)\bin\libzlib.exp"
	if exist "build\$(CONFIG)\bin\sample.json" del /Q "build\$(CONFIG)\bin\sample.json"

#
#   me.h
#

build\$(CONFIG)\inc\me.h: $(DEPS_1)

#
#   osdep.h
#
DEPS_2 = $(DEPS_2) src\osdep\osdep.h
DEPS_2 = $(DEPS_2) build\$(CONFIG)\inc\me.h

build\$(CONFIG)\inc\osdep.h: $(DEPS_2)
	@echo ..... [Copy] build\$(CONFIG)\inc\osdep.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B src\osdep\osdep.h+modified build\$(CONFIG)\inc\osdep.h $(LOG)

#
#   mbedtls.h
#
DEPS_3 = $(DEPS_3) src\mbedtls\mbedtls.h

build\$(CONFIG)\inc\mbedtls.h: $(DEPS_3)
	@echo ..... [Copy] build\$(CONFIG)\inc\mbedtls.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B src\mbedtls\mbedtls.h+modified build\$(CONFIG)\inc\mbedtls.h $(LOG)

#
#   mbedtls.h
#

src\mbedtls\mbedtls.h: $(DEPS_4)

#
#   mbedtlsLib.obj
#
DEPS_5 = $(DEPS_5) src\mbedtls\mbedtls.h

build\$(CONFIG)\obj\mbedtlsLib.obj: \
    src\mbedtls\mbedtlsLib.c $(DEPS_5)
	@echo .. [Compile] build\$(CONFIG)\obj\mbedtlsLib.obj
	"$(CC)" -c $(DFLAGS) -Fo$(BUILD)\obj\mbedtlsLib.obj -Fd$(BUILD)\obj\mbedtlsLib.pdb -nologo -GR- -Zi -Od -MDd $(IFLAGS) src\mbedtls\mbedtlsLib.c $(LOG)

!IF "$(ME_COM_MBEDTLS)" == "1"
#
#   libmbedtls
#
DEPS_6 = $(DEPS_6) build\$(CONFIG)\inc\osdep.h
DEPS_6 = $(DEPS_6) build\$(CONFIG)\inc\mbedtls.h
DEPS_6 = $(DEPS_6) build\$(CONFIG)\obj\mbedtlsLib.obj

build\$(CONFIG)\bin\libmbedtls.lib: $(DEPS_6)
	@echo ..... [Link] build\$(CONFIG)\bin\libmbedtls.lib
	"lib.exe" -nologo -out:$(BUILD)\bin\libmbedtls.lib "$(BUILD)\obj\mbedtlsLib.obj" $(LOG)
!ENDIF

#
#   mpr.h
#
DEPS_7 = $(DEPS_7) src\mpr\mpr.h
DEPS_7 = $(DEPS_7) build\$(CONFIG)\inc\me.h
DEPS_7 = $(DEPS_7) build\$(CONFIG)\inc\osdep.h

build\$(CONFIG)\inc\mpr.h: $(DEPS_7)
	@echo ..... [Copy] build\$(CONFIG)\inc\mpr.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B src\mpr\mpr.h+modified build\$(CONFIG)\inc\mpr.h $(LOG)

#
#   mpr-mbedtls.obj
#
DEPS_8 = $(DEPS_8) build\$(CONFIG)\inc\mpr.h

build\$(CONFIG)\obj\mpr-mbedtls.obj: \
    src\mpr-mbedtls\mpr-mbedtls.c $(DEPS_8)
	@echo .. [Compile] build\$(CONFIG)\obj\mpr-mbedtls.obj
	"$(CC)" -c $(DFLAGS) -Fo$(BUILD)\obj\mpr-mbedtls.obj -Fd$(BUILD)\obj\mpr-mbedtls.pdb -nologo -GR- -Zi -Od -MDd -D_FILE_OFFSET_BITS=64 $(IFLAGS) src\mpr-mbedtls\mpr-mbedtls.c $(LOG)

!IF "$(ME_COM_MBEDTLS)" == "1"
#
#   libmpr-mbedtls
#
DEPS_9 = $(DEPS_9) build\$(CONFIG)\bin\libmbedtls.lib
DEPS_9 = $(DEPS_9) build\$(CONFIG)\obj\mpr-mbedtls.obj

build\$(CONFIG)\bin\libmpr-mbedtls.lib: $(DEPS_9)
	@echo ..... [Link] build\$(CONFIG)\bin\libmpr-mbedtls.lib
	"lib.exe" -nologo -out:$(BUILD)\bin\libmpr-mbedtls.lib "$(BUILD)\obj\mpr-mbedtls.obj" $(LOG)
!ENDIF

#
#   mpr-openssl.obj
#
DEPS_10 = $(DEPS_10) build\$(CONFIG)\inc\mpr.h

build\$(CONFIG)\obj\mpr-openssl.obj: \
    src\mpr-openssl\mpr-openssl.c $(DEPS_10)
	@echo .. [Compile] build\$(CONFIG)\obj\mpr-openssl.obj
	"$(CC)" -c $(DFLAGS) -Fo$(BUILD)\obj\mpr-openssl.obj -Fd$(BUILD)\obj\mpr-openssl.pdb $(CFLAGS) $(IFLAGS) src\mpr-openssl\mpr-openssl.c $(LOG)

!IF "$(ME_COM_OPENSSL)" == "1"
#
#   libmpr-openssl
#
DEPS_11 = $(DEPS_11) build\$(CONFIG)\obj\mpr-openssl.obj

build\$(CONFIG)\bin\libmpr-openssl.lib: $(DEPS_11)
	@echo ..... [Link] build\$(CONFIG)\bin\libmpr-openssl.lib
	"lib.exe" -nologo -out:$(BUILD)\bin\libmpr-openssl.lib "$(BUILD)\obj\mpr-openssl.obj" $(LOG)
!ENDIF

#
#   mpr.h
#

src\mpr\mpr.h: $(DEPS_12)

#
#   mprLib.obj
#
DEPS_13 = $(DEPS_13) src\mpr\mpr.h

build\$(CONFIG)\obj\mprLib.obj: \
    src\mpr\mprLib.c $(DEPS_13)
	@echo .. [Compile] build\$(CONFIG)\obj\mprLib.obj
	"$(CC)" -c $(DFLAGS) -Fo$(BUILD)\obj\mprLib.obj -Fd$(BUILD)\obj\mprLib.pdb $(CFLAGS) -D_FILE_OFFSET_BITS=64 $(IFLAGS) src\mpr\mprLib.c $(LOG)

#
#   libmpr
#
DEPS_14 = $(DEPS_14) build\$(CONFIG)\inc\osdep.h
!IF "$(ME_COM_MBEDTLS)" == "1"
DEPS_14 = $(DEPS_14) build\$(CONFIG)\bin\libmpr-mbedtls.lib
!ENDIF
!IF "$(ME_COM_MBEDTLS)" == "1"
DEPS_14 = $(DEPS_14) build\$(CONFIG)\bin\libmbedtls.lib
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
DEPS_14 = $(DEPS_14) build\$(CONFIG)\bin\libmpr-openssl.lib
!ENDIF
DEPS_14 = $(DEPS_14) build\$(CONFIG)\inc\mpr.h
DEPS_14 = $(DEPS_14) build\$(CONFIG)\obj\mprLib.obj

!IF "$(ME_COM_MBEDTLS)" == "1"
LIBS_14 = $(LIBS_14) libmbedtls.lib
!ENDIF
!IF "$(ME_COM_MBEDTLS)" == "1"
LIBS_14 = $(LIBS_14) libmpr-mbedtls.lib
!ENDIF
!IF "$(ME_COM_MBEDTLS)" == "1"
LIBS_14 = $(LIBS_14) libmbedtls.lib
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_14 = $(LIBS_14) libmpr-openssl.lib
!ENDIF
!IF "$(ME_COM_MBEDTLS)" == "1"
LIBS_14 = $(LIBS_14) libmpr-mbedtls.lib
!ENDIF

build\$(CONFIG)\bin\libmpr.dll: $(DEPS_14)
	@echo ..... [Link] build\$(CONFIG)\bin\libmpr.dll
	"$(LD)" -dll -out:$(BUILD)\bin\libmpr.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) "$(BUILD)\obj\mprLib.obj" $(LIBPATHS_14) $(LIBS_14) $(LIBS_14) $(LIBS)  $(LOG)

#
#   pcre.h
#
DEPS_15 = $(DEPS_15) src\pcre\pcre.h

build\$(CONFIG)\inc\pcre.h: $(DEPS_15)
	@echo ..... [Copy] build\$(CONFIG)\inc\pcre.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B src\pcre\pcre.h+modified build\$(CONFIG)\inc\pcre.h $(LOG)

#
#   pcre.h
#

src\pcre\pcre.h: $(DEPS_16)

#
#   pcre.obj
#
DEPS_17 = $(DEPS_17) build\$(CONFIG)\inc\me.h
DEPS_17 = $(DEPS_17) src\pcre\pcre.h

build\$(CONFIG)\obj\pcre.obj: \
    src\pcre\pcre.c $(DEPS_17)
	@echo .. [Compile] build\$(CONFIG)\obj\pcre.obj
	"$(CC)" -c $(DFLAGS) -Fo$(BUILD)\obj\pcre.obj -Fd$(BUILD)\obj\pcre.pdb $(CFLAGS) $(IFLAGS) src\pcre\pcre.c $(LOG)

!IF "$(ME_COM_PCRE)" == "1"
#
#   libpcre
#
DEPS_18 = $(DEPS_18) build\$(CONFIG)\inc\pcre.h
DEPS_18 = $(DEPS_18) build\$(CONFIG)\obj\pcre.obj

build\$(CONFIG)\bin\libpcre.dll: $(DEPS_18)
	@echo ..... [Link] build\$(CONFIG)\bin\libpcre.dll
	"$(LD)" -dll -out:$(BUILD)\bin\libpcre.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) "$(BUILD)\obj\pcre.obj" $(LIBS)  $(LOG)
!ENDIF

#
#   http.h
#
DEPS_19 = $(DEPS_19) src\http\http.h
DEPS_19 = $(DEPS_19) build\$(CONFIG)\inc\mpr.h

build\$(CONFIG)\inc\http.h: $(DEPS_19)
	@echo ..... [Copy] build\$(CONFIG)\inc\http.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B src\http\http.h+modified build\$(CONFIG)\inc\http.h $(LOG)

#
#   http.h
#

src\http\http.h: $(DEPS_20)

#
#   httpLib.obj
#
DEPS_21 = $(DEPS_21) src\http\http.h
DEPS_21 = $(DEPS_21) build\$(CONFIG)\inc\pcre.h

build\$(CONFIG)\obj\httpLib.obj: \
    src\http\httpLib.c $(DEPS_21)
	@echo .. [Compile] build\$(CONFIG)\obj\httpLib.obj
	"$(CC)" -c $(DFLAGS) -Fo$(BUILD)\obj\httpLib.obj -Fd$(BUILD)\obj\httpLib.pdb $(CFLAGS) -D_FILE_OFFSET_BITS=64 $(IFLAGS) src\http\httpLib.c $(LOG)

!IF "$(ME_COM_HTTP)" == "1"
#
#   libhttp
#
DEPS_22 = $(DEPS_22) build\$(CONFIG)\bin\libmpr.dll
!IF "$(ME_COM_PCRE)" == "1"
DEPS_22 = $(DEPS_22) build\$(CONFIG)\bin\libpcre.dll
!ENDIF
DEPS_22 = $(DEPS_22) build\$(CONFIG)\inc\http.h
DEPS_22 = $(DEPS_22) build\$(CONFIG)\obj\httpLib.obj

!IF "$(ME_COM_MBEDTLS)" == "1"
LIBS_22 = $(LIBS_22) libmbedtls.lib
!ENDIF
!IF "$(ME_COM_MBEDTLS)" == "1"
LIBS_22 = $(LIBS_22) libmpr-mbedtls.lib
!ENDIF
!IF "$(ME_COM_MBEDTLS)" == "1"
LIBS_22 = $(LIBS_22) libmbedtls.lib
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_22 = $(LIBS_22) libmpr-openssl.lib
!ENDIF
LIBS_22 = $(LIBS_22) libmpr.lib
!IF "$(ME_COM_MBEDTLS)" == "1"
LIBS_22 = $(LIBS_22) libmpr-mbedtls.lib
!ENDIF
!IF "$(ME_COM_PCRE)" == "1"
LIBS_22 = $(LIBS_22) libpcre.lib
!ENDIF
!IF "$(ME_COM_PCRE)" == "1"
LIBS_22 = $(LIBS_22) libpcre.lib
!ENDIF
LIBS_22 = $(LIBS_22) libmpr.lib

build\$(CONFIG)\bin\libhttp.dll: $(DEPS_22)
	@echo ..... [Link] build\$(CONFIG)\bin\libhttp.dll
	"$(LD)" -dll -out:$(BUILD)\bin\libhttp.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) "$(BUILD)\obj\httpLib.obj" $(LIBPATHS_22) $(LIBS_22) $(LIBS_22) $(LIBS)  $(LOG)
!ENDIF

#
#   zlib.h
#
DEPS_23 = $(DEPS_23) src\zlib\zlib.h
DEPS_23 = $(DEPS_23) build\$(CONFIG)\inc\me.h

build\$(CONFIG)\inc\zlib.h: $(DEPS_23)
	@echo ..... [Copy] build\$(CONFIG)\inc\zlib.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B src\zlib\zlib.h+modified build\$(CONFIG)\inc\zlib.h $(LOG)

#
#   zlib.h
#

src\zlib\zlib.h: $(DEPS_24)

#
#   zlib.obj
#
DEPS_25 = $(DEPS_25) build\$(CONFIG)\inc\me.h
DEPS_25 = $(DEPS_25) src\zlib\zlib.h

build\$(CONFIG)\obj\zlib.obj: \
    src\zlib\zlib.c $(DEPS_25)
	@echo .. [Compile] build\$(CONFIG)\obj\zlib.obj
	"$(CC)" -c $(DFLAGS) -Fo$(BUILD)\obj\zlib.obj -Fd$(BUILD)\obj\zlib.pdb $(CFLAGS) $(IFLAGS) src\zlib\zlib.c $(LOG)

!IF "$(ME_COM_ZLIB)" == "1"
#
#   libzlib
#
DEPS_26 = $(DEPS_26) build\$(CONFIG)\inc\zlib.h
DEPS_26 = $(DEPS_26) build\$(CONFIG)\obj\zlib.obj

build\$(CONFIG)\bin\libzlib.dll: $(DEPS_26)
	@echo ..... [Link] build\$(CONFIG)\bin\libzlib.dll
	"$(LD)" -dll -out:$(BUILD)\bin\libzlib.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) "$(BUILD)\obj\zlib.obj" $(LIBS)  $(LOG)
!ENDIF

#
#   ejs.slots.h
#

src\ejscript\ejs.slots.h: $(DEPS_27)

#
#   ejs.h
#
DEPS_28 = $(DEPS_28) src\ejscript\ejs.h
DEPS_28 = $(DEPS_28) build\$(CONFIG)\inc\me.h
DEPS_28 = $(DEPS_28) build\$(CONFIG)\inc\osdep.h
DEPS_28 = $(DEPS_28) build\$(CONFIG)\inc\mpr.h
DEPS_28 = $(DEPS_28) build\$(CONFIG)\inc\http.h
DEPS_28 = $(DEPS_28) src\ejscript\ejs.slots.h
DEPS_28 = $(DEPS_28) build\$(CONFIG)\inc\pcre.h
DEPS_28 = $(DEPS_28) build\$(CONFIG)\inc\zlib.h

build\$(CONFIG)\inc\ejs.h: $(DEPS_28)
	@echo ..... [Copy] build\$(CONFIG)\inc\ejs.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B src\ejscript\ejs.h+modified build\$(CONFIG)\inc\ejs.h $(LOG)

#
#   ejs.slots.h
#
DEPS_29 = $(DEPS_29) src\ejscript\ejs.slots.h

build\$(CONFIG)\inc\ejs.slots.h: $(DEPS_29)
	@echo ..... [Copy] build\$(CONFIG)\inc\ejs.slots.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B src\ejscript\ejs.slots.h+modified build\$(CONFIG)\inc\ejs.slots.h $(LOG)

#
#   ejsByteGoto.h
#
DEPS_30 = $(DEPS_30) src\ejscript\ejsByteGoto.h

build\$(CONFIG)\inc\ejsByteGoto.h: $(DEPS_30)
	@echo ..... [Copy] build\$(CONFIG)\inc\ejsByteGoto.h
	if not exist "build\$(CONFIG)\inc" md "build\$(CONFIG)\inc"
	copy /Y /B src\ejscript\ejsByteGoto.h+modified build\$(CONFIG)\inc\ejsByteGoto.h $(LOG)

#
#   ejs.h
#

src\ejscript\ejs.h: $(DEPS_31)

#
#   ejsLib.obj
#
DEPS_32 = $(DEPS_32) src\ejscript\ejs.h
DEPS_32 = $(DEPS_32) build\$(CONFIG)\inc\mpr.h
DEPS_32 = $(DEPS_32) build\$(CONFIG)\inc\pcre.h
DEPS_32 = $(DEPS_32) build\$(CONFIG)\inc\me.h

build\$(CONFIG)\obj\ejsLib.obj: \
    src\ejscript\ejsLib.c $(DEPS_32)
	@echo .. [Compile] build\$(CONFIG)\obj\ejsLib.obj
	"$(CC)" -c $(DFLAGS) -Fo$(BUILD)\obj\ejsLib.obj -Fd$(BUILD)\obj\ejsLib.pdb $(CFLAGS) -D_FILE_OFFSET_BITS=64 $(IFLAGS) src\ejscript\ejsLib.c $(LOG)

!IF "$(ME_COM_EJSCRIPT)" == "1"
#
#   libejs
#
!IF "$(ME_COM_HTTP)" == "1"
DEPS_33 = $(DEPS_33) build\$(CONFIG)\bin\libhttp.dll
!ENDIF
!IF "$(ME_COM_PCRE)" == "1"
DEPS_33 = $(DEPS_33) build\$(CONFIG)\bin\libpcre.dll
!ENDIF
DEPS_33 = $(DEPS_33) build\$(CONFIG)\bin\libmpr.dll
!IF "$(ME_COM_ZLIB)" == "1"
DEPS_33 = $(DEPS_33) build\$(CONFIG)\bin\libzlib.dll
!ENDIF
DEPS_33 = $(DEPS_33) build\$(CONFIG)\inc\ejs.h
DEPS_33 = $(DEPS_33) build\$(CONFIG)\inc\ejs.slots.h
DEPS_33 = $(DEPS_33) build\$(CONFIG)\inc\ejsByteGoto.h
DEPS_33 = $(DEPS_33) build\$(CONFIG)\obj\ejsLib.obj

!IF "$(ME_COM_MBEDTLS)" == "1"
LIBS_33 = $(LIBS_33) libmbedtls.lib
!ENDIF
!IF "$(ME_COM_MBEDTLS)" == "1"
LIBS_33 = $(LIBS_33) libmpr-mbedtls.lib
!ENDIF
!IF "$(ME_COM_MBEDTLS)" == "1"
LIBS_33 = $(LIBS_33) libmbedtls.lib
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_33 = $(LIBS_33) libmpr-openssl.lib
!ENDIF
LIBS_33 = $(LIBS_33) libmpr.lib
!IF "$(ME_COM_MBEDTLS)" == "1"
LIBS_33 = $(LIBS_33) libmpr-mbedtls.lib
!ENDIF
!IF "$(ME_COM_PCRE)" == "1"
LIBS_33 = $(LIBS_33) libpcre.lib
!ENDIF
!IF "$(ME_COM_HTTP)" == "1"
LIBS_33 = $(LIBS_33) libhttp.lib
!ENDIF
!IF "$(ME_COM_PCRE)" == "1"
LIBS_33 = $(LIBS_33) libpcre.lib
!ENDIF
LIBS_33 = $(LIBS_33) libmpr.lib
!IF "$(ME_COM_ZLIB)" == "1"
LIBS_33 = $(LIBS_33) libzlib.lib
!ENDIF
!IF "$(ME_COM_ZLIB)" == "1"
LIBS_33 = $(LIBS_33) libzlib.lib
!ENDIF
!IF "$(ME_COM_HTTP)" == "1"
LIBS_33 = $(LIBS_33) libhttp.lib
!ENDIF

build\$(CONFIG)\bin\libejs.dll: $(DEPS_33)
	@echo ..... [Link] build\$(CONFIG)\bin\libejs.dll
	"$(LD)" -dll -out:$(BUILD)\bin\libejs.dll -entry:$(ENTRY) $(LDFLAGS) $(LIBPATHS) "$(BUILD)\obj\ejsLib.obj" $(LIBPATHS_33) $(LIBS_33) $(LIBS_33) $(LIBS)  $(LOG)
!ENDIF

#
#   ejsc.obj
#
DEPS_34 = $(DEPS_34) src\ejscript\ejs.h

build\$(CONFIG)\obj\ejsc.obj: \
    src\ejscript\ejsc.c $(DEPS_34)
	@echo .. [Compile] build\$(CONFIG)\obj\ejsc.obj
	"$(CC)" -c $(DFLAGS) -Fo$(BUILD)\obj\ejsc.obj -Fd$(BUILD)\obj\ejsc.pdb $(CFLAGS) -D_FILE_OFFSET_BITS=64 $(IFLAGS) src\ejscript\ejsc.c $(LOG)

!IF "$(ME_COM_EJSCRIPT)" == "1"
#
#   ejsc
#
DEPS_35 = $(DEPS_35) build\$(CONFIG)\bin\libejs.dll
DEPS_35 = $(DEPS_35) build\$(CONFIG)\obj\ejsc.obj

!IF "$(ME_COM_MBEDTLS)" == "1"
LIBS_35 = $(LIBS_35) libmbedtls.lib
!ENDIF
!IF "$(ME_COM_MBEDTLS)" == "1"
LIBS_35 = $(LIBS_35) libmpr-mbedtls.lib
!ENDIF
!IF "$(ME_COM_MBEDTLS)" == "1"
LIBS_35 = $(LIBS_35) libmbedtls.lib
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_35 = $(LIBS_35) libmpr-openssl.lib
!ENDIF
LIBS_35 = $(LIBS_35) libmpr.lib
!IF "$(ME_COM_MBEDTLS)" == "1"
LIBS_35 = $(LIBS_35) libmpr-mbedtls.lib
!ENDIF
!IF "$(ME_COM_PCRE)" == "1"
LIBS_35 = $(LIBS_35) libpcre.lib
!ENDIF
!IF "$(ME_COM_HTTP)" == "1"
LIBS_35 = $(LIBS_35) libhttp.lib
!ENDIF
!IF "$(ME_COM_PCRE)" == "1"
LIBS_35 = $(LIBS_35) libpcre.lib
!ENDIF
LIBS_35 = $(LIBS_35) libmpr.lib
!IF "$(ME_COM_ZLIB)" == "1"
LIBS_35 = $(LIBS_35) libzlib.lib
!ENDIF
LIBS_35 = $(LIBS_35) libejs.lib
!IF "$(ME_COM_ZLIB)" == "1"
LIBS_35 = $(LIBS_35) libzlib.lib
!ENDIF
!IF "$(ME_COM_HTTP)" == "1"
LIBS_35 = $(LIBS_35) libhttp.lib
!ENDIF

build\$(CONFIG)\bin\expansive-ejsc.exe: $(DEPS_35)
	@echo ..... [Link] build\$(CONFIG)\bin\expansive-ejsc.exe
	"$(LD)" -nologo -out:$(BUILD)\bin\expansive-ejsc.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS) "$(BUILD)\obj\ejsc.obj" $(LIBPATHS_35) $(LIBS_35) $(LIBS_35) $(LIBS)  $(LOG)
!ENDIF

!IF "$(ME_COM_EJSCRIPT)" == "1"
#
#   ejs.mod
#
DEPS_36 = $(DEPS_36) src\ejscript\ejs.es
DEPS_36 = $(DEPS_36) build\$(CONFIG)\bin\expansive-ejsc.exe

build\$(CONFIG)\bin\ejs.mod: $(DEPS_36)
	cd src\ejscript
	@echo .. [Compile] ejs.mod
	"../../$(BUILD)/bin/expansive-ejsc" --out "../../$(BUILD)/bin/ejs.mod" --debug --bind --require null ejs.es
	cd ..\..
!ENDIF

#
#   ejs.obj
#
DEPS_37 = $(DEPS_37) src\ejscript\ejs.h

build\$(CONFIG)\obj\ejs.obj: \
    src\ejscript\ejs.c $(DEPS_37)
	@echo .. [Compile] build\$(CONFIG)\obj\ejs.obj
	"$(CC)" -c $(DFLAGS) -Fo$(BUILD)\obj\ejs.obj -Fd$(BUILD)\obj\ejs.pdb $(CFLAGS) $(IFLAGS) src\ejscript\ejs.c $(LOG)

!IF "$(ME_COM_EJSCRIPT)" == "1"
#
#   ejscmd
#
DEPS_38 = $(DEPS_38) build\$(CONFIG)\bin\libejs.dll
DEPS_38 = $(DEPS_38) build\$(CONFIG)\obj\ejs.obj

!IF "$(ME_COM_MBEDTLS)" == "1"
LIBS_38 = $(LIBS_38) libmbedtls.lib
!ENDIF
!IF "$(ME_COM_MBEDTLS)" == "1"
LIBS_38 = $(LIBS_38) libmpr-mbedtls.lib
!ENDIF
!IF "$(ME_COM_MBEDTLS)" == "1"
LIBS_38 = $(LIBS_38) libmbedtls.lib
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_38 = $(LIBS_38) libmpr-openssl.lib
!ENDIF
LIBS_38 = $(LIBS_38) libmpr.lib
!IF "$(ME_COM_MBEDTLS)" == "1"
LIBS_38 = $(LIBS_38) libmpr-mbedtls.lib
!ENDIF
!IF "$(ME_COM_PCRE)" == "1"
LIBS_38 = $(LIBS_38) libpcre.lib
!ENDIF
!IF "$(ME_COM_HTTP)" == "1"
LIBS_38 = $(LIBS_38) libhttp.lib
!ENDIF
!IF "$(ME_COM_PCRE)" == "1"
LIBS_38 = $(LIBS_38) libpcre.lib
!ENDIF
LIBS_38 = $(LIBS_38) libmpr.lib
!IF "$(ME_COM_ZLIB)" == "1"
LIBS_38 = $(LIBS_38) libzlib.lib
!ENDIF
LIBS_38 = $(LIBS_38) libejs.lib
!IF "$(ME_COM_ZLIB)" == "1"
LIBS_38 = $(LIBS_38) libzlib.lib
!ENDIF
!IF "$(ME_COM_HTTP)" == "1"
LIBS_38 = $(LIBS_38) libhttp.lib
!ENDIF

build\$(CONFIG)\bin\expansive-ejs.exe: $(DEPS_38)
	@echo ..... [Link] build\$(CONFIG)\bin\expansive-ejs.exe
	"$(LD)" -nologo -out:$(BUILD)\bin\expansive-ejs.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS) "$(BUILD)\obj\ejs.obj" $(LIBPATHS_38) $(LIBS_38) $(LIBS_38) $(LIBS)  $(LOG)
!ENDIF

#
#   expansive.mod
#
DEPS_39 = $(DEPS_39) src\expansive.es
DEPS_39 = $(DEPS_39) src\ExpParser.es
DEPS_39 = $(DEPS_39) paks\ejs.version\Version.es
!IF "$(ME_COM_EJSCRIPT)" == "1"
DEPS_39 = $(DEPS_39) build\$(CONFIG)\bin\ejs.mod
!ENDIF

build\$(CONFIG)\bin\expansive.mod: $(DEPS_39)
	@echo .. [Compile] expansive.mod
	"./$(BUILD)/bin/expansive-ejsc" --debug --out "./$(BUILD)/bin/expansive.mod" --optimize 9 src/expansive.es src/ExpParser.es paks/ejs.version/Version.es

#
#   expansive.h
#

build\$(CONFIG)\inc\expansive.h: $(DEPS_40)

#
#   expansive.obj
#
DEPS_41 = $(DEPS_41) build\$(CONFIG)\inc\ejs.h
DEPS_41 = $(DEPS_41) build\$(CONFIG)\inc\expansive.h

build\$(CONFIG)\obj\expansive.obj: \
    src\expansive.c $(DEPS_41)
	@echo .. [Compile] build\$(CONFIG)\obj\expansive.obj
	"$(CC)" -c $(DFLAGS) -Fo$(BUILD)\obj\expansive.obj -Fd$(BUILD)\obj\expansive.pdb $(CFLAGS) -D_FILE_OFFSET_BITS=64 $(IFLAGS) src\expansive.c $(LOG)

#
#   expParser.obj
#
DEPS_42 = $(DEPS_42) build\$(CONFIG)\inc\ejs.h
DEPS_42 = $(DEPS_42) build\$(CONFIG)\inc\expansive.h

build\$(CONFIG)\obj\expParser.obj: \
    src\expParser.c $(DEPS_42)
	@echo .. [Compile] build\$(CONFIG)\obj\expParser.obj
	"$(CC)" -c $(DFLAGS) -Fo$(BUILD)\obj\expParser.obj -Fd$(BUILD)\obj\expParser.pdb $(CFLAGS) -D_FILE_OFFSET_BITS=64 $(IFLAGS) src\expParser.c $(LOG)

#
#   expansive
#
DEPS_43 = $(DEPS_43) build\$(CONFIG)\bin\libmpr.dll
!IF "$(ME_COM_HTTP)" == "1"
DEPS_43 = $(DEPS_43) build\$(CONFIG)\bin\libhttp.dll
!ENDIF
!IF "$(ME_COM_EJSCRIPT)" == "1"
DEPS_43 = $(DEPS_43) build\$(CONFIG)\bin\libejs.dll
!ENDIF
DEPS_43 = $(DEPS_43) build\$(CONFIG)\bin\expansive.mod
DEPS_43 = $(DEPS_43) build\$(CONFIG)\obj\expansive.obj
DEPS_43 = $(DEPS_43) build\$(CONFIG)\obj\expParser.obj

!IF "$(ME_COM_MBEDTLS)" == "1"
LIBS_43 = $(LIBS_43) libmbedtls.lib
!ENDIF
!IF "$(ME_COM_MBEDTLS)" == "1"
LIBS_43 = $(LIBS_43) libmpr-mbedtls.lib
!ENDIF
!IF "$(ME_COM_MBEDTLS)" == "1"
LIBS_43 = $(LIBS_43) libmbedtls.lib
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_43 = $(LIBS_43) libmpr-openssl.lib
!ENDIF
LIBS_43 = $(LIBS_43) libmpr.lib
!IF "$(ME_COM_MBEDTLS)" == "1"
LIBS_43 = $(LIBS_43) libmpr-mbedtls.lib
!ENDIF
!IF "$(ME_COM_PCRE)" == "1"
LIBS_43 = $(LIBS_43) libpcre.lib
!ENDIF
!IF "$(ME_COM_HTTP)" == "1"
LIBS_43 = $(LIBS_43) libhttp.lib
!ENDIF
!IF "$(ME_COM_PCRE)" == "1"
LIBS_43 = $(LIBS_43) libpcre.lib
!ENDIF
LIBS_43 = $(LIBS_43) libmpr.lib
!IF "$(ME_COM_ZLIB)" == "1"
LIBS_43 = $(LIBS_43) libzlib.lib
!ENDIF
!IF "$(ME_COM_EJSCRIPT)" == "1"
LIBS_43 = $(LIBS_43) libejs.lib
!ENDIF
!IF "$(ME_COM_ZLIB)" == "1"
LIBS_43 = $(LIBS_43) libzlib.lib
!ENDIF
!IF "$(ME_COM_HTTP)" == "1"
LIBS_43 = $(LIBS_43) libhttp.lib
!ENDIF

build\$(CONFIG)\bin\expansive.exe: $(DEPS_43)
	@echo ..... [Link] build\$(CONFIG)\bin\expansive.exe
	"$(LD)" -nologo -out:$(BUILD)\bin\expansive.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS) "$(BUILD)\obj\expansive.obj" "$(BUILD)\obj\expParser.obj" $(LIBPATHS_43) $(LIBS_43) $(LIBS_43) $(LIBS)  $(LOG)

#
#   http.obj
#
DEPS_44 = $(DEPS_44) src\http\http.h

build\$(CONFIG)\obj\http.obj: \
    src\http\http.c $(DEPS_44)
	@echo .. [Compile] build\$(CONFIG)\obj\http.obj
	"$(CC)" -c $(DFLAGS) -Fo$(BUILD)\obj\http.obj -Fd$(BUILD)\obj\http.pdb $(CFLAGS) $(IFLAGS) src\http\http.c $(LOG)

!IF "$(ME_COM_HTTP)" == "1"
#
#   httpcmd
#
DEPS_45 = $(DEPS_45) build\$(CONFIG)\bin\libhttp.dll
DEPS_45 = $(DEPS_45) build\$(CONFIG)\obj\http.obj

!IF "$(ME_COM_MBEDTLS)" == "1"
LIBS_45 = $(LIBS_45) libmbedtls.lib
!ENDIF
!IF "$(ME_COM_MBEDTLS)" == "1"
LIBS_45 = $(LIBS_45) libmpr-mbedtls.lib
!ENDIF
!IF "$(ME_COM_MBEDTLS)" == "1"
LIBS_45 = $(LIBS_45) libmbedtls.lib
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_45 = $(LIBS_45) libmpr-openssl.lib
!ENDIF
LIBS_45 = $(LIBS_45) libmpr.lib
!IF "$(ME_COM_MBEDTLS)" == "1"
LIBS_45 = $(LIBS_45) libmpr-mbedtls.lib
!ENDIF
!IF "$(ME_COM_PCRE)" == "1"
LIBS_45 = $(LIBS_45) libpcre.lib
!ENDIF
LIBS_45 = $(LIBS_45) libhttp.lib
!IF "$(ME_COM_PCRE)" == "1"
LIBS_45 = $(LIBS_45) libpcre.lib
!ENDIF
LIBS_45 = $(LIBS_45) libmpr.lib

build\$(CONFIG)\bin\http.exe: $(DEPS_45)
	@echo ..... [Link] build\$(CONFIG)\bin\http.exe
	"$(LD)" -nologo -out:$(BUILD)\bin\http.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS) "$(BUILD)\obj\http.obj" $(LIBPATHS_45) $(LIBS_45) $(LIBS_45) $(LIBS)  $(LOG)
!ENDIF

#
#   install-certs
#
DEPS_46 = $(DEPS_46) src\certs\samples\ca.crt
DEPS_46 = $(DEPS_46) src\certs\samples\ca.key
DEPS_46 = $(DEPS_46) src\certs\samples\ec.crt
DEPS_46 = $(DEPS_46) src\certs\samples\ec.key
DEPS_46 = $(DEPS_46) src\certs\samples\roots.crt
DEPS_46 = $(DEPS_46) src\certs\samples\self.crt
DEPS_46 = $(DEPS_46) src\certs\samples\self.key
DEPS_46 = $(DEPS_46) src\certs\samples\test.crt
DEPS_46 = $(DEPS_46) src\certs\samples\test.key

build\$(CONFIG)\.install-certs-modified: $(DEPS_46)
	@echo ..... [Copy] build\$(CONFIG)\bin
	if not exist "build\$(CONFIG)\bin" md "build\$(CONFIG)\bin"
	copy /Y /B src\certs\samples\ca.crt+modified build\$(CONFIG)\bin\ca.crt $(LOG)
	copy /Y /B src\certs\samples\ca.key+modified build\$(CONFIG)\bin\ca.key $(LOG)
	copy /Y /B src\certs\samples\ec.crt+modified build\$(CONFIG)\bin\ec.crt $(LOG)
	copy /Y /B src\certs\samples\ec.key+modified build\$(CONFIG)\bin\ec.key $(LOG)
	copy /Y /B src\certs\samples\roots.crt+modified build\$(CONFIG)\bin\roots.crt $(LOG)
	copy /Y /B src\certs\samples\self.crt+modified build\$(CONFIG)\bin\self.crt $(LOG)
	copy /Y /B src\certs\samples\self.key+modified build\$(CONFIG)\bin\self.key $(LOG)
	copy /Y /B src\certs\samples\test.crt+modified build\$(CONFIG)\bin\test.crt $(LOG)
	copy /Y /B src\certs\samples\test.key+modified build\$(CONFIG)\bin\test.key $(LOG)
	copy /Y /B nul+modified build\$(CONFIG)\.install-certs-modified $(LOG)

#
#   sample
#
DEPS_47 = $(DEPS_47) src\sample.json

build\$(CONFIG)\bin\sample.json: $(DEPS_47)
	@echo ..... [Copy] build\$(CONFIG)\bin\sample.json
	if not exist "build\$(CONFIG)\bin" md "build\$(CONFIG)\bin"
	copy /Y /B src\sample.json+modified build\$(CONFIG)\bin\sample.json $(LOG)

